# Generated by Django 3.2.3 on 2021-07-28 05:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_tutor', models.BooleanField(default=False, verbose_name='Статус тьютора')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Тьютор',
                'verbose_name_plural': 'Тьюторы',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Удалено')),
                ('time', models.CharField(choices=[('1', '11:00'), ('2', '13:30'), ('3', '16:00'), ('4', '18:30')], default=('1', '11:00'), max_length=1, verbose_name='Время')),
                ('location', models.CharField(choices=[('1', 'КЮЧ1'), ('2', 'КЮЧ2'), ('3', 'Дзержинского'), ('4', 'Шеронова')], default=('1', 'КЮЧ1'), max_length=1, verbose_name='Локация')),
                ('day_of_week', models.CharField(choices=[('mn', 'Понедельник'), ('tu', 'Вторник'), ('we', 'Среда'), ('th', 'Четверг'), ('fr', 'Пятница'), ('st', 'Суббота'), ('sn', 'Воскресенье')], default=('mn', 'Понедельник'), max_length=2, verbose_name='День недели')),
                ('tutor', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'unique_together': {('time', 'location', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='Kiberon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.CharField(choices=[('visit', 'Посещение урока'), ('eyes', 'Разминка глаз'), ('fastest', 'Быстрее всех завершил задание'), ('homework', 'За выполнение домашнего задания'), ('instagram', 'За пост в instagram'), ('social', 'За посты в соц. сети'), ('custom', 'Свое достижение')], default=('visit', 'Посещение урока'), max_length=10, unique=True, verbose_name='Достижение')),
                ('value', models.PositiveSmallIntegerField(default=5, verbose_name='Количество киберонов')),
            ],
            options={
                'verbose_name': 'Печать',
                'verbose_name_plural': 'Печати',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='Удалено')),
                ('name', models.CharField(max_length=50, verbose_name='Фамилия Имя')),
                ('kiberon_amount', models.PositiveIntegerField(default=0)),
                ('info', models.TextField(blank=True, max_length=250, verbose_name='Информация')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='mainapp.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='KiberonStudentReg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('custom_kiberons', models.PositiveSmallIntegerField(default=0, verbose_name='Свое количество киберонов')),
                ('kiberon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.kiberon', verbose_name='Достижение')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.student', verbose_name='Студент')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Тьютор')),
            ],
            options={
                'verbose_name': 'Запись о печати',
                'verbose_name_plural': 'Записи о печатях',
                'ordering': ('-date',),
            },
        ),
    ]
